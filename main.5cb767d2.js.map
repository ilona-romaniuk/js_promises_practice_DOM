{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","notificationRightPosition","createNotification","text","className","notification","createElement","style","right","dataset","qa","textContent","append","firstPromise","Promise","resolve","reject","clicked","addEventListener","setTimeout","then","catch","secondPromise","e","thirdPromise","rightClick","leftClick","button"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAChCC,EAA4B,GAEhC,SAASC,EAAmBC,EAAMC,GAC1BC,IAAAA,EAAeN,SAASO,cAAc,OAUrCD,OARPA,EAAaE,MAAMC,MAAWP,GAAAA,OAAAA,EAA9B,MACAI,EAAaI,QAAQC,GAAK,eAC1BL,EAAaM,YAAcR,EAC3BE,EAAaD,UAAYA,EACzBN,EAAKc,OAAOP,GAEZJ,GAA6B,IAEtBI,EAGT,IAAMQ,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACrCC,IAAAA,GAAU,EAEdnB,EAAKoB,iBAAiB,QAAS,WAC7BD,GAAU,EACVF,MAGGE,GACHE,WAAWH,EAAQ,OAIvBH,EACGO,KAAK,WACJlB,EAAmB,6BAA8B,aAElDmB,MAAM,WACLnB,EAAmB,6BAA8B,aAGrD,IAAMoB,EAAgB,IAAIR,QAAQ,SAACC,EAASC,GAC1ClB,EAAKoB,iBAAiB,cAAe,SAACK,GACpCR,MAGFjB,EAAKoB,iBAAiB,QAAS,WAC7BH,QAIJO,EACGF,KAAK,WACJlB,EAAmB,8BAA+B,aAEnDmB,MAAM,WACLnB,EAAmB,8BAA+B,aAGtD,IAAMsB,EAAe,IAAIV,QAAQ,SAACC,EAASC,GACrCS,IAAAA,GAAa,EACbC,GAAY,EAEhB5B,EAAKoB,iBAAiB,YAAa,SAACK,GACjB,IAAbA,EAAEI,SACJF,GAAa,GAGE,IAAbF,EAAEI,SACJD,GAAY,GAGVD,GAAcC,GAChBX,QAKNS,EACGJ,KAAK,WACJlB,EAAmB,6BAA8B,aAElDmB,MAAM,WACLnB,EAAmB,6BAA8B","file":"main.5cb767d2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nlet notificationRightPosition = 50;\n\nfunction createNotification(text, className) {\n  const notification = document.createElement('div');\n\n  notification.style.right = `${notificationRightPosition}px`;\n  notification.dataset.qa = 'notification';\n  notification.textContent = text;\n  notification.className = className;\n  body.append(notification);\n\n  notificationRightPosition += 300;\n\n  return notification;\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  let clicked = false;\n\n  body.addEventListener('click', () => {\n    clicked = true;\n    resolve();\n  });\n\n  if (!clicked) {\n    setTimeout(reject, 3000);\n  }\n});\n\nfirstPromise\n  .then(() => {\n    createNotification('First promise was resolved', 'success');\n  })\n  .catch(() => {\n    createNotification('First promise was rejected', 'warning');\n  });\n\nconst secondPromise = new Promise((resolve, reject) => {\n  body.addEventListener('contextmenu', (e) => {\n    resolve();\n  });\n\n  body.addEventListener('click', () => {\n    resolve();\n  });\n});\n\nsecondPromise\n  .then(() => {\n    createNotification('Second promise was resolved', 'success');\n  })\n  .catch(() => {\n    createNotification('Second promise was rejected', 'warning');\n  });\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let rightClick = false;\n  let leftClick = false;\n\n  body.addEventListener('mousedown', (e) => {\n    if (e.button === 2) {\n      rightClick = true;\n    }\n\n    if (e.button === 0) {\n      leftClick = true;\n    }\n\n    if (rightClick && leftClick) {\n      resolve();\n    }\n  });\n});\n\nthirdPromise\n  .then(() => {\n    createNotification('Third promise was resolved', 'success');\n  })\n  .catch(() => {\n    createNotification('Third promise was rejected', 'warning');\n  });\n"]}